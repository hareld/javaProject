/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package java5774_1248_0915_gui;

import DataAccessObject.Controller;
import DataAccessObject.Singelton;
import java.awt.Color;
import java.awt.Toolkit;
import static java.lang.Long.parseLong;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import Packages.Activity;
import Packages.CustomerCrd;
import Packages.Person;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JTable;

/**
 * @author dell
 */
public class AddCstmrCrdForm extends javax.swing.JFrame {

    private static final long serialVersionUID = 1L;

    /**
     * Creates new form AddCstmrCrdForm
     */
    private Person per;
    private CustomerCrd cstmr;
    private ArrayList<Activity> PerActivities;
    private final Runnable MainFormMyfunc;

    private static Controller sngltn = null;

    static {
        try {
            sngltn = Singelton.getMySingelton();
        } catch (Exception ex) {
            Logger.getLogger(AddCstmrCrdForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // window for add customer card
    public AddCstmrCrdForm(Runnable myFunc) throws Exception {
        initComponents();
        All_Tab.setEnabledAt(1, false);
        java.awt.event.WindowEvent MyWindow = null;
        formWindowOpened(MyWindow);

        this.MainFormMyfunc = myFunc;
    }

    // alignment the window
    private void formWindowOpened(java.awt.event.WindowEvent evt) {
        int lebar = this.getWidth() / 2;
        int tinggi = this.getHeight() / 2;
        int x = (Toolkit.getDefaultToolkit().getScreenSize().width / 2) - lebar;
        int y = (Toolkit.getDefaultToolkit().getScreenSize().height / 2) - tinggi;
        this.setLocation(x, y);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        All_Tab = new javax.swing.JTabbedPane();
        AddNewPerson = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        buttonAddPerson = new java.awt.Button();
        EnterPerName = new javax.swing.JTextField();
        EnterPerId = new javax.swing.JTextField();
        EnterPerPhone = new javax.swing.JTextField();
        EnterPerAddress = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        AddNewPolicy = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        PerNameInActivityTab = new javax.swing.JTextPane();
        buttonAddNewPolicy = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablePolicyView = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        AddNewPerson.setEnabled(false);

        jLabel1.setText("Person Name:");

        jLabel2.setText("Person ID:");

        jLabel3.setText("Person Phone:");

        jLabel4.setText("Person Address:");

        buttonAddPerson.setLabel("Add Person");
        buttonAddPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddPersonActionPerformed(evt);
            }
        });

        EnterPerName.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        EnterPerName.setForeground(new java.awt.Color(153, 153, 153));
        EnterPerName.setText("Enter Name");
        EnterPerName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                person_name_cursor_in_handler(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                person_name_cursor_out_handler(evt);
            }
        });

        EnterPerId.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        EnterPerId.setForeground(new java.awt.Color(153, 153, 153));
        EnterPerId.setText("Enter Per ID");
        EnterPerId.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                person_id_cursor_in_handler(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                person_id_cursor_out_handler(evt);
            }
        });

        EnterPerPhone.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        EnterPerPhone.setForeground(new java.awt.Color(153, 153, 153));
        EnterPerPhone.setText("Enter Phone");
        EnterPerPhone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                person_phone_cursor_in_handler(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                person_phone_cursor_out_handler(evt);
            }
        });

        EnterPerAddress.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        EnterPerAddress.setForeground(new java.awt.Color(153, 153, 153));
        EnterPerAddress.setText("Enter Address");
        EnterPerAddress.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                person_address_cursor_in_handler(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                person_address_cursor_out_handler(evt);
            }
        });

        jLabel6.setText("*Only Numbers");

        jLabel7.setText("*Only Numbers");

        javax.swing.GroupLayout AddNewPersonLayout = new javax.swing.GroupLayout(AddNewPerson);
        AddNewPerson.setLayout(AddNewPersonLayout);
        AddNewPersonLayout.setHorizontalGroup(
            AddNewPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddNewPersonLayout.createSequentialGroup()
                .addGap(0, 127, Short.MAX_VALUE)
                .addGroup(AddNewPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddNewPersonLayout.createSequentialGroup()
                        .addGroup(AddNewPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AddNewPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel3))
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(AddNewPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(EnterPerAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(AddNewPersonLayout.createSequentialGroup()
                                .addGroup(AddNewPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(EnterPerId, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(EnterPerName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6))
                            .addGroup(AddNewPersonLayout.createSequentialGroup()
                                .addComponent(EnterPerPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)))
                        .addGap(158, 158, 158))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddNewPersonLayout.createSequentialGroup()
                        .addComponent(buttonAddPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(202, 202, 202))))
        );
        AddNewPersonLayout.setVerticalGroup(
            AddNewPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddNewPersonLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AddNewPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddNewPersonLayout.createSequentialGroup()
                        .addGroup(AddNewPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(EnterPerName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(AddNewPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(EnterPerId, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(AddNewPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(EnterPerPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4))
                    .addGroup(AddNewPersonLayout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(EnterPerAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addComponent(buttonAddPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        buttonAddPerson.getAccessibleContext().setAccessibleName("AddNewPerson");

        All_Tab.addTab("Person", AddNewPerson);

        AddNewPolicy.setEnabled(false);

        PerNameInActivityTab.setEnabled(false);
        jScrollPane1.setViewportView(PerNameInActivityTab);

        buttonAddNewPolicy.setText("Add New Policy");
        buttonAddNewPolicy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddNewPolicyActionPerformed(evt);
            }
        });

        jTablePolicyView.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Date", "Representative", "Type", "Company", "Rate"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablePolicyView.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTablePolicyView);
        if (jTablePolicyView.getColumnModel().getColumnCount() > 0) {
            jTablePolicyView.getColumnModel().getColumn(0).setPreferredWidth(2);
            jTablePolicyView.getColumnModel().getColumn(1).setPreferredWidth(5);
            jTablePolicyView.getColumnModel().getColumn(2).setPreferredWidth(10);
            jTablePolicyView.getColumnModel().getColumn(3).setPreferredWidth(10);
            jTablePolicyView.getColumnModel().getColumn(4).setPreferredWidth(10);
            jTablePolicyView.getColumnModel().getColumn(5).setPreferredWidth(5);
        }

        jLabel8.setText("Select Policy to Update\\Delete:");

        javax.swing.GroupLayout AddNewPolicyLayout = new javax.swing.GroupLayout(AddNewPolicy);
        AddNewPolicy.setLayout(AddNewPolicyLayout);
        AddNewPolicyLayout.setHorizontalGroup(
            AddNewPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddNewPolicyLayout.createSequentialGroup()
                .addGroup(AddNewPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddNewPolicyLayout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(jLabel5))
                    .addGroup(AddNewPolicyLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel8)))
                .addGroup(AddNewPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddNewPolicyLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AddNewPolicyLayout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(buttonAddNewPolicy)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 553, Short.MAX_VALUE)
        );
        AddNewPolicyLayout.setVerticalGroup(
            AddNewPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddNewPolicyLayout.createSequentialGroup()
                .addGroup(AddNewPolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddNewPolicyLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(buttonAddNewPolicy)
                        .addGap(18, 18, 18))
                    .addGroup(AddNewPolicyLayout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        All_Tab.addTab("Policies", AddNewPolicy);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(All_Tab)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(All_Tab)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // add a new person
    private void buttonAddPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddPersonActionPerformed
        boolean ok = false;
        this.per = null;
        this.cstmr = null;
        if (!CheckAllInputText( // check all required fields
                ThereIsText(EnterPerName.getText()),
                ThereIsText(EnterPerId.getText()) && OnlyNumbers(EnterPerId.getText()),
                ThereIsText(EnterPerPhone.getText()) && OnlyNumbers(EnterPerPhone.getText()),
                ThereIsText(EnterPerAddress.getText())
        )) {
            JOptionPane.showMessageDialog(null, "Insert valid values", "Error", JOptionPane.ERROR_MESSAGE);
        } else if ("Add Person".equals(buttonAddPerson.getLabel())) {
            PerActivities = new ArrayList<Activity>();

            per = new Person(EnterPerName.getText(),
                    parseLong(EnterPerId.getText()),
                    parseLong(EnterPerPhone.getText()),
                    EnterPerAddress.getText());

            cstmr = new CustomerCrd(per, PerActivities);
            ok = sngltn.AddNewCustomerCrd(cstmr);
            if (ok) {
                All_Tab.setEnabledAt(1, true); //##
                JOptionPane.showMessageDialog(null, "Adding CustomerCrd.Preson Successfully", "", JOptionPane.PLAIN_MESSAGE);
                EnterPerId.setEnabled(false);
                try {
                    PerNameInActivityTab.setText("Person Name: "
                            + sngltn.GetMyPersonCstmrCrd(per.getId()).getPerson().getNamePerson() + "\n"
                            + "Preson ID: "
                            + Long.toString(per.getId())
                    );
                } catch (Exception ex) {
                    Logger.getLogger(AddCstmrCrdForm.class.getName()).log(Level.SEVERE, null, ex);
                }
                buttonAddPerson.setLabel("Update This Person");
            } else {
                JOptionPane.showMessageDialog(null, "This client is already exist", "", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {

            try {
                cstmr = sngltn.GetMyPersonCstmrCrd(parseLong(EnterPerId.getText()));
            } catch (Exception ex) {
                Logger.getLogger(AddCstmrCrdForm.class.getName()).log(Level.SEVERE, null, ex);
            }

            per = cstmr.getPerson();
            per.setNamePerson(EnterPerName.getText());
            per.setPhonePerson(parseLong(EnterPerPhone.getText()));
            per.setAddressPerson(EnterPerAddress.getText());
            cstmr.setPerson(per);
            try {
                sngltn.UpdateCustomerCrd(cstmr);
            } catch (Exception ex) {
                Logger.getLogger(AddCstmrCrdForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(null, "Update Preson Successfully", "", JOptionPane.PLAIN_MESSAGE);
            try {
                PerNameInActivityTab.setText("Person Name: "
                        + sngltn.GetMyPersonCstmrCrd(per.getId()).getPerson().getNamePerson() + "\n"
                        + "Preson ID: "
                        + Long.toString(per.getId()));
            } catch (Exception ex) {
                Logger.getLogger(AddCstmrCrdForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_buttonAddPersonActionPerformed

    // add new policy 
    private void buttonAddNewPolicyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddNewPolicyActionPerformed
        AddPolicyForm AddPolicy = null;
        try { // able this window when the add policy form is close and update the jTablePolicyView
            AddPolicy = new AddPolicyForm(parseLong(EnterPerId.getText()), this.jTablePolicyView,
                    new Runnable() {
                        @Override
                        public void run() {
                            try {
                                EnableThisForm();
                            } catch (Exception ex) {
                                Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                    }
            );
        } catch (Exception ex) {
            Logger.getLogger(AddCstmrCrdForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        setEnabled(false);
        AddPolicy.show();

        jTablePolicyView.addMouseListener(new MouseAdapter() { // mouse handler
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 1) {
                    JTable target = (JTable) e.getSource();
                    int row = target.getSelectedRow();
                    int column = target.getSelectedColumn();

                    DeleteOrUpdateSelectForm deletOrUp = null;
                    try {
                        deletOrUp = new DeleteOrUpdateSelectForm("p", parseLong(EnterPerId.getText()), jTablePolicyView.getValueAt(row, 0), jTablePolicyView);
                    } catch (Exception ex) {
                        Logger.getLogger(UpdateCstmrCrdForm.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    deletOrUp.show();
                }
            }
        });
    }//GEN-LAST:event_buttonAddNewPolicyActionPerformed

    // closing the window event
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        MainFormMyfunc.run();
    }//GEN-LAST:event_formWindowClosing

    // handle tooltip label
    private void person_name_cursor_in_handler(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_person_name_cursor_in_handler
        if (EnterPerName.getText().equals("Enter Name")) {
            EnterPerName.setText(null);
            EnterPerName.setFont(new java.awt.Font("Tahoma", 0, 11));
            EnterPerName.setForeground(new java.awt.Color(0, 0, 0));
        }
    }//GEN-LAST:event_person_name_cursor_in_handler

    // handle tooltip label
    private void person_name_cursor_out_handler(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_person_name_cursor_out_handler
        if (EnterPerName.getText().length() < 1) {
            EnterPerName.setText("Enter Name");
            EnterPerName.setFont(new java.awt.Font("Tahoma", 2, 11));
            EnterPerName.setForeground(new java.awt.Color(153, 153, 153));
        }
    }//GEN-LAST:event_person_name_cursor_out_handler

    // handle tooltip label
    private void person_id_cursor_in_handler(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_person_id_cursor_in_handler
        if (EnterPerId.getText().equals("Enter Per ID")) {
            EnterPerId.setText(null);
            EnterPerId.setFont(new java.awt.Font("Tahoma", 0, 11));
            EnterPerId.setForeground(new java.awt.Color(0, 0, 0));
        }
    }//GEN-LAST:event_person_id_cursor_in_handler

    // handle tooltip label
    private void person_id_cursor_out_handler(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_person_id_cursor_out_handler
        if (EnterPerId.getText().length() < 1) {
            EnterPerId.setText("Enter Per ID");
            EnterPerId.setFont(new java.awt.Font("Tahoma", 2, 11));
            EnterPerId.setForeground(new java.awt.Color(153, 153, 153));
        }
    }//GEN-LAST:event_person_id_cursor_out_handler

    // handle tooltip label
    private void person_phone_cursor_in_handler(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_person_phone_cursor_in_handler
        if (EnterPerPhone.getText().equals("Enter Phone")) {
            EnterPerPhone.setText(null);
            EnterPerPhone.setFont(new java.awt.Font("Tahoma", 0, 11));
            EnterPerPhone.setForeground(new java.awt.Color(0, 0, 0));
        }
    }//GEN-LAST:event_person_phone_cursor_in_handler

    // handle tooltip label
    private void person_phone_cursor_out_handler(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_person_phone_cursor_out_handler
        if (EnterPerPhone.getText().length() < 1) {
            EnterPerPhone.setText("Enter Phone");
            EnterPerPhone.setFont(new java.awt.Font("Tahoma", 2, 11));
            EnterPerPhone.setForeground(new java.awt.Color(153, 153, 153));
        }
    }//GEN-LAST:event_person_phone_cursor_out_handler

    // handle tooltip label
    private void person_address_cursor_in_handler(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_person_address_cursor_in_handler
        if (EnterPerAddress.getText().equals("Enter Address")) {
            EnterPerAddress.setText(null);
            EnterPerAddress.setFont(new java.awt.Font("Tahoma", 0, 11));
            EnterPerAddress.setForeground(new java.awt.Color(0, 0, 0));
        }
    }//GEN-LAST:event_person_address_cursor_in_handler

    // handle tooltip label
    private void person_address_cursor_out_handler(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_person_address_cursor_out_handler
        if (EnterPerAddress.getText().length() < 1) {
            EnterPerAddress.setText("Enter Address");
            EnterPerAddress.setFont(new java.awt.Font("Tahoma", 2, 11));
            EnterPerAddress.setForeground(new java.awt.Color(153, 153, 153));
        }
    }//GEN-LAST:event_person_address_cursor_out_handler

    // check numeric
    private static boolean OnlyNumbers(String str) {
        try {
            long l = Long.parseLong(str);
        } catch (NumberFormatException n) {
            return false;
        }
        return true;
    }

    // check if there is text in field
    private boolean ThereIsText(String str) {
        try {
            int ln = str.length();
            if ((ln == 0) || (str.equals("Enter Name")) || (str.equals("Enter Per ID")) || (str.equals("Enter Phone")) || (str.equals("Enter Address"))) {
                return false;
            }
        } catch (NumberFormatException n) {
            return false;
        }
        return true;
    }

    // validation of fields data
    private boolean CheckAllInputText(boolean str1, boolean str2, boolean str3, boolean str4) {
        boolean reslt = true;
        if (!str1) {
            EnterPerName.setBackground(Color.red);
            reslt = false;
        } else {
            EnterPerName.setBackground(Color.white);
        }

        if (!str2) {
            EnterPerId.setBackground(Color.red);
            reslt = false;
        } else {
            EnterPerId.setBackground(Color.white);
        }

        if (!str3) {
            EnterPerPhone.setBackground(Color.red);
            reslt = false;
        } else {
            EnterPerPhone.setBackground(Color.white);
        }

        if (!str4) {
            EnterPerAddress.setBackground(Color.red);
            reslt = false;
        } else {
            EnterPerAddress.setBackground(Color.white);
        }

        return reslt;
    }

    private void EnableThisForm() throws Exception {
        setEnabled(true);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddCstmrCrdForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
//                    new AddCstmrCrdForm().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(AddCstmrCrdForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AddNewPerson;
    private javax.swing.JPanel AddNewPolicy;
    private javax.swing.JTabbedPane All_Tab;
    private javax.swing.JTextField EnterPerAddress;
    private javax.swing.JTextField EnterPerId;
    private javax.swing.JTextField EnterPerName;
    private javax.swing.JTextField EnterPerPhone;
    private javax.swing.JTextPane PerNameInActivityTab;
    private javax.swing.JButton buttonAddNewPolicy;
    private java.awt.Button buttonAddPerson;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTablePolicyView;
    // End of variables declaration//GEN-END:variables
}
